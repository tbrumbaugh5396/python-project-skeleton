[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "python-skeleton-project"
version = "0.1.0"
description = "A skeleton Python project ready for PyPI and executable packaging"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
maintainers = [
    {name = "Your Name", email = "your.email@example.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.8"
dependencies = []

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=23.0",
    "flake8>=6.0",
    "mypy>=1.0",
    "build>=0.10.0",
    "twine>=4.0.0",
    "pyinstaller>=5.0",
]
gui = [
    "wxpython>=4.2.0",
]

[project.scripts]
skeleton-cli = "skeleton.cli:main"

[project.gui-scripts]
skeleton-gui = "skeleton.gui:main"

[project.urls]
Homepage = "https://github.com/yourusername/python-skeleton-project"
Documentation = "https://github.com/yourusername/python-skeleton-project#readme"
Repository = "https://github.com/yourusername/python-skeleton-project.git"
"Bug Tracker" = "https://github.com/yourusername/python-skeleton-project/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
skeleton = ["data/*", "templates/*"]

# Black code formatter
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# Flake8 linter
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]

# MyPy type checker
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

# Pytest
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Coverage
[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
] 